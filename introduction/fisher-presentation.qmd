---
format:
    beamer:
        code-fold: true
        bibliography: Symposium.bib
        titlegraphic: ../data/logo.png

author: Francesco Iacovelli, Ulyana Dupletsa, Jacopo Tissino
subtitle: XIII ET symposium hackathon
date: 2023-05-09
---

# Fisher matrix for gravitational wave forecasting

> When we build Einstein Telescope, how many compact binary signals will it be able to see?
> How well will it localize them in the sky?
> How well will it measure their parameters, such as the radii of neutron stars?

---

## Gravitational wave data analysis

Gravitational wave data is modelled as signal plus additive noise: $d(t) = n(t) + h_\theta(t)$.

---

We can estimate the parameters $\theta$ by exploring the posterior distribution 

$$ p(\theta | d) = \mathcal{L}(d | \theta ) \pi (\theta ) = \mathcal{N} \exp \left( (d | h_\theta) - \frac{1}{2} (h_\theta | h_\theta) \right) \pi (\theta )\,,
$$

where

$$ (a | b) = 4 \Re \int_0^\infty \frac{a(f) b^*(f)}{S_n(f)}\text{d}f \,,
$$

while $\pi (\theta )$ is our prior distribution on the parameters.

---

The posterior is explored stochastically, and we can compute summary statistics:

- mean $\langle \theta_i \rangle$, 
- variance $\sigma_i^2 = \langle (\theta_i- \langle \theta_i\rangle)^2 \rangle$, 
- covariance $\mathcal{C}_{ij} =\langle (\theta_i- \langle \theta_i\rangle) (\theta_j- \langle \theta_j\rangle) \rangle$.

At this stage, we are not making any approximation, and the 
covariance matrix is just a summary tool. 

## Signal-to-noise ratio

The signal-to-noise ratio (SNR) statistic is $\rho = (d | h) / \sqrt{(h|h)}$.

With the expected noise realization, 

$$
\rho \approx \sqrt{(h|h)} = 2 \sqrt{\int_0^\infty \frac{|h(f)|^2}{S_n(f)} \text{d}f}
\,.
$$ 

---

## SNR thresholds

Without time shifts nor non-Gaussianities, the SNR would simply follow
a $\chi^2$ distribution with two degrees of freedom:
"five $\sigma$" significance with a threshold of $\rho = 5.5$. 

In real data, typically:
$$ \text{FAR} = \text{FAR}_8 \exp \left( - \frac{\rho - 8}{\alpha}\right) \,.
$$

For BNS in O1: $\alpha = 0.13$ and $\text{FAR}_8 = 30000 \text{yr}^{-1}$.

---

## Parameter dependence of CBC signals

A discussion of the parameters a BNS signal depends on, with relative error
($\sigma _x / x$) values computed from the parameter estimation of GW170817.

---

### Intrinsic parameters

- __masses__ $m_1$ and $m_2$: $\sigma _x / x \sim 10\%$, 
- __chirp mass__ $\mathcal{M}$: $\sigma _x / x \sim 0.1\%$.

$$ \mathcal{M} = \frac{(m_1 m_2 )^{3/5}}{(m_1 + m_2)^{1/5}}
$$


- __mass ratio__ $q = m_1 / m_2$: $\sigma _x / x \sim 20\%$.

We are measuring the _detector-frame_ mass:
$$ \mathcal{M} = \mathcal{M}_{\text{source}} ( 1 + z )
$$

---

Alternative parametrization: 

- __symmetric mass ratio__ $\nu = \mu / M = q / (1+q)^2$: $\sigma_x / x \approx 4\%$
- __total mass__ $M = m_1 + m_2$: $\sigma_x / x \approx 3\%$

---

- __aligned spin__: $\chi _{1z}$ and $\chi _{2z}$: $\sigma _x / x \sim 3$ and 10 respectively,
- __effective aligned spin__ $\chi _{\text{eff}} = (m_1 \chi _{1z} + m_2 \chi _{2z} )/(m_1 + m_2)$: $\sigma _x / x \sim 1$ (compatible with zero)
- __precessing spin__ $\chi_p$: compatible with zero,

---

- __tidal polarizability__ $\Lambda _1$ and $\Lambda _2$: $\sigma _x / x \sim 1.5$,
- __effective tidal parameter__ $\widetilde{\Lambda}$: $\sigma_x / x \sim 0.6$.

$$ \Lambda_i = \frac{2}{3} \kappa_2 \left( \frac{R_i c^2}{G m_i}\right)^5
$$

---

### Extrinsic parameters

- __distance__ $d_L$ $\sigma _x / x \sim 20\%$,
- degeneracy with the __inclination__ of the source, $\iota$:  $\sigma _x / x \sim 10\%$,
- __arrival time__ at geocenter $t_\oplus$, 
- __phase__ $\phi$,
- __polarization__ angle $\psi$: $\sigma _x \sim 0.3 \text{rad}$,
- __sky position__ $(\text{ra}, \text{dec})$: $\sigma _x \sim 2 \text{deg}$ and $9 \text{deg}$.

---

Sky area: 

$$ \Delta \Omega \approx - 2 \pi \log(1 - 0.9) |\cos(\text{dec})| \sqrt{\sigma _{\text{ra}}^2 \sigma_{\text{dec}}^2 - \text{cov}_{\text{ra, dec}}^2} \times \left( \frac{180\ \text{deg}}{\pi\ \text{rad}}\right)^2
$$


For GW170817, using the posterior covariance matrix, this approximation yields $28 \text{deg}^2$.

---

#### GW150914 comparison

- $\sigma _{\mathcal{M}} / \mathcal{M} = \sigma_M / M \approx 3\%$: not so many cycles
- two-detector event: sky area was $600 \text{deg}^2$, but the Gaussian approximation gives $1800 \text{deg}^2$.

---

### Correlation structure

We can compute correlation coefficients:
$$ \rho_{ij} = \frac{\operatorname{cov}(\theta _i, \theta_j)}{\sigma_i \sigma_j}
$$

---

```{python}
# we start from the covariance matrix for an analysis of GW170817
# this is included in the auxiliary data for convenience

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import Normalize
from matplotlib.cm import ScalarMappable
from matplotlib import ticker

def plot_correlations(cov, symbols):
    n = len(symbols)

    sigmas = np.sqrt(np.diagonal(cov))
    correlations = cov / np.kron(sigmas, sigmas).reshape(n, n)

    cmap = plt.get_cmap('RdBu')
    normalization = Normalize(-1, 1)
    fig, axes = plt.subplots(figsize=(10, 6))
    axes.matshow(correlations, cmap=cmap, norm=normalization)
    for axis in [axes.xaxis, axes.yaxis]:
        axis.set_major_locator(ticker.FixedLocator(np.arange(n)))
        axis.set_major_formatter(ticker.FixedFormatter(symbols))
    plt.colorbar(ScalarMappable(cmap=cmap, norm=normalization), ax=axes)
    plt.show()

symbols = [
    '$\\mathcal{M}$',
    '$q$',
    '$\\chi_1$',
    '$\\chi_2$',
    '$\\Lambda_1$',
    '$\\Lambda_2$',
    '$d_L$',
    '$\\cos \\iota$',
    'ra',
    'dec',
    '$\psi$',
    '$c_{AL1}$',
    '$c_{\phi L1}$',
]
cov = np.loadtxt('../data/covariance_170817.txt')
plot_correlations(cov, symbols)
```

---

```{python}
symbols = np.array([
    '$\\mathcal{M}$',
    '$\\eta$',
    '$d_L$',
    '$\\theta$',
    'ra',
    '$\\iota$',
    '$\\psi$',
    '$t_{\\mathrm{coal}}$',
    '$\\phi_{\\mathrm{coal}}$',
    '$\\chi_{1z}$',
    '$\\chi_{2z}$',
    '$\\widetilde{\\Lambda}$',
])
# ['Mc',
#  'dL',
#  'theta',
#  'phi',
#  'iota',
#  'psi',
#  'tcoal',
#  'eta',
#  'Phicoal',
#  'chi1z',
#  'chi2z',
#  'Lambda1',
#  'Lambda2']
cov = np.loadtxt('../data/gwfast_covariance.txt')

reshuffle = [0, 1, 9, 10, 11, 2, 5, 3, 4, 6, 7, 8]

plot_correlations(cov[np.ix_(reshuffle, reshuffle)], symbols[reshuffle])

```

---

### Antenna pattern

The strain at the detector depends on the antenna pattern:
$$ h(t) = h_{ij} (t) D_{ij}(t)\,.
$$

---

## Fisher matrix

In the Fisher matrix approximation, we are approximating the likelihood as 

$$ \mathcal{L}(d | \theta) \approx \mathcal{N} \exp \left(- \frac{1}{2} \Delta \theta^i \mathcal{F}_{ij} \Delta \theta^j \right)
$$

where $\Delta \theta^i = \theta ^i - \langle \theta ^i \rangle$.

A __multivariate normal distribution__, with covariance matrix $\mathcal{C}_{ij} = \mathcal{F}_{ij}^{-1}$.
This is a good approximation in the high-SNR limit.

---

The Fisher matrix $\mathcal{F}_{ij}$ can be computed as the scalar product
of the derivatives of waveforms: 
$$ \mathcal{F}_{ij} = \left.\left\langle \partial_i \partial_j \mathcal{L} \right\rangle \right|_{n = 0,\ \theta = \langle \theta \rangle} =  ( \partial_i h | \partial_j h ) = 4 \Re \int_0^{\infty} \frac{1}{S_n(f)}  \frac{\partial h}{\partial \theta _i} \frac{\partial h^*}{\partial \theta _j}\text{d}f\,.
$$


---

The covariance matrix can be evaluated in $\lesssim 1 \text{s}$, while 
full parameter estimation takes hours to weeks.

Tricky step computationally: inverting $\mathcal{F}_{ij}$ to get $\mathcal{C}_{ij}$.

---

```{python}
from multivariate_normal import MultivariateNormal
n = MultivariateNormal([0, 0], [[1, 0.8], [0.8, 1]])
n.plot_2d_analytical(0, 0, .9)
```
